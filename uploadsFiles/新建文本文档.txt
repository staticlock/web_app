D:\anaconda3\envs\edcaenv\python.exe D:\PythonCode\paper\EDCA-Net-main\main.py 
Namespace(num_classes=2, batch_size=32, num_workers=1, pin_memory=True, shuffle=True, is_train=True, momentum=0.9, epochs=20, init_lr=0.0001, weight_decay=0.0005, nesterov=True, lr_patience=10, train_patience=100, gamma=0.1, use_gpu=True, best=False, random_seed=1, data_dir='./data/HEp-Dataset', ckpt_dir='./ckpt', logs_dir='./logs/', use_tensorboard=True, resume=False, print_freq=10, save_name='model', model_num=2, independent=False)
Namespace(num_classes=3, batch_size=4, num_workers=1, pin_memory=True, shuffle=True, is_train=True, momentum=0.9, epochs=20, init_lr=0.0001, weight_decay=0.0005, nesterov=True, lr_patience=10, train_patience=100, gamma=0.1, use_gpu=True, best=False, random_seed=1, data_dir='./data/new-cervical-3class', ckpt_dir='./ckpt', logs_dir='./logs/', use_tensorboard=True, resume=False, print_freq=10, save_name='model', model_num=2, independent=False)
第一个算法：
[*] Saving tensorboard logs to ./logs/model
DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=3, bias=True)
)
DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=3, bias=True)
)
[*] Number of parameters of one model: 7,016,323
[*] Number of parameters of one model: 7,016,323
第1折:
[*] Model Checkpoint Dir: ./ckpt
[*] Param Path: ./ckpt\model_params.json

[*] Train on 3568 samples, validate on 893 samples, meta_validate on 1487 samples

Epoch: 1/20 - LR: 0.000100
465.6s - model1_loss: 0.6888 - model1_acc: 74.1031 - model1_kl_loss: 0.0478- model2_kl_loss: 0.0475: 100%|██████████| 3568/3568 [07:46<00:00,  7.65it/s]
model1_Confusion Matrix:
[[217  23   4]
 [ 82 278   5]
 [ 31  31 222]]


model2_Confusion Matrix:
[[213  27   4]
 [ 52 309   4]
 [ 23  37 224]]


model_1: train loss: 0.6888 - train acc: 74.1031 - val loss: 0.5546 - val acc: 80.2912 [*]
model_2: train loss: 0.6885 - train acc: 74.0191 - val loss: 0.4967 - val acc: 83.5386 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.6576    0.8893    0.7561       244
           1     0.8373    0.7616    0.7977       365
           2     0.9610    0.7817    0.8621       284

    accuracy                         0.8029       893
   macro avg     0.8187    0.8109    0.8053       893
weighted avg     0.8276    0.8029    0.8068       893

              precision    recall  f1-score   support

           0     0.7396    0.8730    0.8008       244
           1     0.8284    0.8466    0.8374       365
           2     0.9655    0.7887    0.8682       284

    accuracy                         0.8354       893
   macro avg     0.8445    0.8361    0.8355       893
weighted avg     0.8477    0.8354    0.8372       893


Epoch: 2/20 - LR: 0.000100
462.2s - model1_loss: 0.5500 - model1_acc: 80.8576 - model1_kl_loss: 0.0591- model2_kl_loss: 0.0599: 100%|██████████| 3568/3568 [07:42<00:00,  7.71it/s]
model1_Confusion Matrix:
[[204  33   7]
 [ 21 332  12]
 [ 13  16 255]]


model2_Confusion Matrix:
[[218  22   4]
 [ 44 313   8]
 [ 23  17 244]]


model_1: train loss: 0.5500 - train acc: 80.8576 - val loss: 0.3943 - val acc: 88.5778 [*]
model_2: train loss: 0.5483 - train acc: 80.9417 - val loss: 0.4198 - val acc: 86.7861 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8571    0.8361    0.8465       244
           1     0.8714    0.9096    0.8901       365
           2     0.9307    0.8979    0.9140       284

    accuracy                         0.8858       893
   macro avg     0.8864    0.8812    0.8835       893
weighted avg     0.8863    0.8858    0.8858       893

              precision    recall  f1-score   support

           0     0.7649    0.8934    0.8242       244
           1     0.8892    0.8575    0.8731       365
           2     0.9531    0.8592    0.9037       284

    accuracy                         0.8679       893
   macro avg     0.8691    0.8700    0.8670       893
weighted avg     0.8756    0.8679    0.8695       893


Epoch: 3/20 - LR: 0.000100
463.9s - model1_loss: 0.4639 - model1_acc: 85.7904 - model1_kl_loss: 0.0690- model2_kl_loss: 0.0674: 100%|██████████| 3568/3568 [07:44<00:00,  7.68it/s]
model1_Confusion Matrix:
[[194  43   7]
 [ 28 322  15]
 [ 13  13 258]]


model2_Confusion Matrix:
[[194  44   6]
 [ 28 328   9]
 [ 18  26 240]]


model_1: train loss: 0.4639 - train acc: 85.7904 - val loss: 0.4647 - val acc: 86.6741
model_2: train loss: 0.4691 - train acc: 85.3700 - val loss: 0.4897 - val acc: 85.3303
基测试集:
              precision    recall  f1-score   support

           0     0.8255    0.7951    0.8100       244
           1     0.8519    0.8822    0.8668       365
           2     0.9214    0.9085    0.9149       284

    accuracy                         0.8667       893
   macro avg     0.8663    0.8619    0.8639       893
weighted avg     0.8668    0.8667    0.8666       893

              precision    recall  f1-score   support

           0     0.8083    0.7951    0.8017       244
           1     0.8241    0.8986    0.8598       365
           2     0.9412    0.8451    0.8905       284

    accuracy                         0.8533       893
   macro avg     0.8579    0.8463    0.8507       893
weighted avg     0.8570    0.8533    0.8537       893


Epoch: 4/20 - LR: 0.000100
472.6s - model1_loss: 0.4501 - model1_acc: 86.9675 - model1_kl_loss: 0.0799- model2_kl_loss: 0.0804: 100%|██████████| 3568/3568 [07:53<00:00,  7.54it/s]
model1_Confusion Matrix:
[[217  21   6]
 [ 49 310   6]
 [ 23   9 252]]


model2_Confusion Matrix:
[[220  18   6]
 [ 46 315   4]
 [ 23   9 252]]


model_1: train loss: 0.4501 - train acc: 86.9675 - val loss: 0.4031 - val acc: 87.2340
model_2: train loss: 0.4484 - train acc: 87.4720 - val loss: 0.3782 - val acc: 88.1299 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.7509    0.8893    0.8143       244
           1     0.9118    0.8493    0.8794       365
           2     0.9545    0.8873    0.9197       284

    accuracy                         0.8723       893
   macro avg     0.8724    0.8753    0.8711       893
weighted avg     0.8814    0.8723    0.8744       893

              precision    recall  f1-score   support

           0     0.7612    0.9016    0.8255       244
           1     0.9211    0.8630    0.8911       365
           2     0.9618    0.8873    0.9231       284

    accuracy                         0.8813       893
   macro avg     0.8814    0.8840    0.8799       893
weighted avg     0.8904    0.8813    0.8833       893


Epoch: 5/20 - LR: 0.000100
465.8s - model1_loss: 0.3866 - model1_acc: 89.2096 - model1_kl_loss: 0.0818- model2_kl_loss: 0.0834: 100%|██████████| 3568/3568 [07:46<00:00,  7.65it/s]
model1_Confusion Matrix:
[[210  24  10]
 [ 33 325   7]
 [ 19  15 250]]


model2_Confusion Matrix:
[[217  20   7]
 [ 45 314   6]
 [ 17  13 254]]


model_1: train loss: 0.3866 - train acc: 89.2096 - val loss: 0.4387 - val acc: 87.9059
model_2: train loss: 0.3893 - train acc: 89.3778 - val loss: 0.4142 - val acc: 87.9059
基测试集:
              precision    recall  f1-score   support

           0     0.8015    0.8607    0.8300       244
           1     0.8929    0.8904    0.8916       365
           2     0.9363    0.8803    0.9074       284

    accuracy                         0.8791       893
   macro avg     0.8769    0.8771    0.8764       893
weighted avg     0.8817    0.8791    0.8798       893

              precision    recall  f1-score   support

           0     0.7778    0.8893    0.8298       244
           1     0.9049    0.8603    0.8820       365
           2     0.9513    0.8944    0.9220       284

    accuracy                         0.8791       893
   macro avg     0.8780    0.8813    0.8779       893
weighted avg     0.8849    0.8791    0.8805       893


Epoch: 6/20 - LR: 0.000100
465.9s - model1_loss: 0.3670 - model1_acc: 90.5269 - model1_kl_loss: 0.0853- model2_kl_loss: 0.0836: 100%|██████████| 3568/3568 [07:46<00:00,  7.65it/s]
model1_Confusion Matrix:
[[215  25   4]
 [ 48 307  10]
 [ 20  12 252]]


model2_Confusion Matrix:
[[213  24   7]
 [ 24 334   7]
 [ 11  10 263]]


model_1: train loss: 0.3670 - train acc: 90.5269 - val loss: 0.4017 - val acc: 86.6741
model_2: train loss: 0.3732 - train acc: 90.3868 - val loss: 0.3625 - val acc: 90.7055 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.7597    0.8811    0.8159       244
           1     0.8924    0.8411    0.8660       365
           2     0.9474    0.8873    0.9164       284

    accuracy                         0.8667       893
   macro avg     0.8665    0.8699    0.8661       893
weighted avg     0.8736    0.8667    0.8683       893

              precision    recall  f1-score   support

           0     0.8589    0.8730    0.8659       244
           1     0.9076    0.9151    0.9113       365
           2     0.9495    0.9261    0.9376       284

    accuracy                         0.9071       893
   macro avg     0.9053    0.9047    0.9049       893
weighted avg     0.9076    0.9071    0.9073       893


Epoch: 7/20 - LR: 0.000100
478.8s - model1_loss: 0.3682 - model1_acc: 91.1435 - model1_kl_loss: 0.0915- model2_kl_loss: 0.0932: 100%|██████████| 3568/3568 [07:59<00:00,  7.44it/s]
model1_Confusion Matrix:
[[214  21   9]
 [ 48 302  15]
 [  8  10 266]]


model2_Confusion Matrix:
[[209  28   7]
 [ 29 330   6]
 [ 15  10 259]]


model_1: train loss: 0.3682 - train acc: 91.1435 - val loss: 0.4220 - val acc: 87.5700
model_2: train loss: 0.3766 - train acc: 91.0314 - val loss: 0.3955 - val acc: 89.3617
基测试集:
              precision    recall  f1-score   support

           0     0.7926    0.8770    0.8327       244
           1     0.9069    0.8274    0.8653       365
           2     0.9172    0.9366    0.9268       284

    accuracy                         0.8757       893
   macro avg     0.8722    0.8804    0.8749       893
weighted avg     0.8790    0.8757    0.8760       893

              precision    recall  f1-score   support

           0     0.8261    0.8566    0.8410       244
           1     0.8967    0.9041    0.9004       365
           2     0.9522    0.9120    0.9317       284

    accuracy                         0.8936       893
   macro avg     0.8917    0.8909    0.8910       893
weighted avg     0.8951    0.8936    0.8941       893


Epoch: 8/20 - LR: 0.000100
470.6s - model1_loss: 0.3349 - model1_acc: 92.2646 - model1_kl_loss: 0.0914- model2_kl_loss: 0.0908: 100%|██████████| 3568/3568 [07:51<00:00,  7.57it/s]
model1_Confusion Matrix:
[[209  26   9]
 [ 37 314  14]
 [ 12   2 270]]


model2_Confusion Matrix:
[[208  24  12]
 [ 29 323  13]
 [  9   6 269]]


model_1: train loss: 0.3349 - train acc: 92.2646 - val loss: 0.3576 - val acc: 88.8018 [*]
model_2: train loss: 0.3432 - train acc: 92.3206 - val loss: 0.3806 - val acc: 89.5857
基测试集:
              precision    recall  f1-score   support

           0     0.8101    0.8566    0.8327       244
           1     0.9181    0.8603    0.8883       365
           2     0.9215    0.9507    0.9359       284

    accuracy                         0.8880       893
   macro avg     0.8832    0.8892    0.8856       893
weighted avg     0.8897    0.8880    0.8882       893

              precision    recall  f1-score   support

           0     0.8455    0.8525    0.8490       244
           1     0.9150    0.8849    0.8997       365
           2     0.9150    0.9472    0.9308       284

    accuracy                         0.8959       893
   macro avg     0.8918    0.8949    0.8932       893
weighted avg     0.8960    0.8959    0.8957       893


Epoch: 9/20 - LR: 0.000100
468.8s - model1_loss: 0.3021 - model1_acc: 92.8812 - model1_kl_loss: 0.0891- model2_kl_loss: 0.0921: 100%|██████████| 3568/3568 [07:49<00:00,  7.60it/s]
model1_Confusion Matrix:
[[209  17  18]
 [ 27 311  27]
 [  8   4 272]]


model2_Confusion Matrix:
[[208  29   7]
 [ 23 339   3]
 [  8  22 254]]


model_1: train loss: 0.3021 - train acc: 92.8812 - val loss: 0.4403 - val acc: 88.6898
model_2: train loss: 0.2878 - train acc: 93.7220 - val loss: 0.4187 - val acc: 89.6976
基测试集:
              precision    recall  f1-score   support

           0     0.8566    0.8566    0.8566       244
           1     0.9367    0.8521    0.8924       365
           2     0.8580    0.9577    0.9052       284

    accuracy                         0.8869       893
   macro avg     0.8838    0.8888    0.8847       893
weighted avg     0.8898    0.8869    0.8867       893

              precision    recall  f1-score   support

           0     0.8703    0.8525    0.8613       244
           1     0.8692    0.9288    0.8980       365
           2     0.9621    0.8944    0.9270       284

    accuracy                         0.8970       893
   macro avg     0.9005    0.8919    0.8954       893
weighted avg     0.8991    0.8970    0.8972       893


Epoch: 10/20 - LR: 0.000100
469.0s - model1_loss: 0.2931 - model1_acc: 94.3666 - model1_kl_loss: 0.0967- model2_kl_loss: 0.0956: 100%|██████████| 3568/3568 [07:49<00:00,  7.60it/s]
model1_Confusion Matrix:
[[207  23  14]
 [ 27 324  14]
 [  6   9 269]]


model2_Confusion Matrix:
[[214  16  14]
 [ 34 319  12]
 [ 12   7 265]]


model_1: train loss: 0.2931 - train acc: 94.3666 - val loss: 0.4239 - val acc: 89.5857 [*]
model_2: train loss: 0.2873 - train acc: 94.2265 - val loss: 0.4024 - val acc: 89.3617
基测试集:
              precision    recall  f1-score   support

           0     0.8625    0.8484    0.8554       244
           1     0.9101    0.8877    0.8988       365
           2     0.9057    0.9472    0.9260       284

    accuracy                         0.8959       893
   macro avg     0.8928    0.8944    0.8934       893
weighted avg     0.8957    0.8959    0.8956       893

              precision    recall  f1-score   support

           0     0.8231    0.8770    0.8492       244
           1     0.9327    0.8740    0.9024       365
           2     0.9107    0.9331    0.9217       284

    accuracy                         0.8936       893
   macro avg     0.8888    0.8947    0.8911       893
weighted avg     0.8958    0.8936    0.8940       893


Epoch: 11/20 - LR: 0.000100
486.9s - model1_loss: 0.2821 - model1_acc: 94.4507 - model1_kl_loss: 0.0961- model2_kl_loss: 0.1006: 100%|██████████| 3568/3568 [08:08<00:00,  7.30it/s]
model1_Confusion Matrix:
[[197  32  15]
 [ 28 319  18]
 [  7   5 272]]


model2_Confusion Matrix:
[[198  30  16]
 [ 25 322  18]
 [  5   5 274]]


model_1: train loss: 0.2821 - train acc: 94.4507 - val loss: 0.3897 - val acc: 88.2419
model_2: train loss: 0.2775 - train acc: 95.2915 - val loss: 0.3995 - val acc: 88.9138
基测试集:
              precision    recall  f1-score   support

           0     0.8491    0.8074    0.8277       244
           1     0.8961    0.8740    0.8849       365
           2     0.8918    0.9577    0.9236       284

    accuracy                         0.8824       893
   macro avg     0.8790    0.8797    0.8787       893
weighted avg     0.8819    0.8824    0.8816       893

              precision    recall  f1-score   support

           0     0.8684    0.8115    0.8390       244
           1     0.9020    0.8822    0.8920       365
           2     0.8896    0.9648    0.9257       284

    accuracy                         0.8891       893
   macro avg     0.8867    0.8862    0.8855       893
weighted avg     0.8889    0.8891    0.8882       893


Epoch: 12/20 - LR: 0.000100
486.2s - model1_loss: 0.2627 - model1_acc: 95.3195 - model1_kl_loss: 0.0999- model2_kl_loss: 0.0978: 100%|██████████| 3568/3568 [08:06<00:00,  7.33it/s]
model1_Confusion Matrix:
[[197  31  16]
 [ 24 315  26]
 [ 10   4 270]]


model2_Confusion Matrix:
[[220  18   6]
 [ 37 317  11]
 [ 14  14 256]]


model_1: train loss: 0.2627 - train acc: 95.3195 - val loss: 0.4907 - val acc: 87.5700
model_2: train loss: 0.2600 - train acc: 95.2635 - val loss: 0.5096 - val acc: 88.8018
基测试集:
              precision    recall  f1-score   support

           0     0.8528    0.8074    0.8295       244
           1     0.9000    0.8630    0.8811       365
           2     0.8654    0.9507    0.9060       284

    accuracy                         0.8757       893
   macro avg     0.8727    0.8737    0.8722       893
weighted avg     0.8761    0.8757    0.8749       893

              precision    recall  f1-score   support

           0     0.8118    0.9016    0.8544       244
           1     0.9083    0.8685    0.8880       365
           2     0.9377    0.9014    0.9192       284

    accuracy                         0.8880       893
   macro avg     0.8859    0.8905    0.8872       893
weighted avg     0.8913    0.8880    0.8887       893


Epoch: 13/20 - LR: 0.000100
467.8s - model1_loss: 0.2672 - model1_acc: 95.2074 - model1_kl_loss: 0.0978- model2_kl_loss: 0.0973: 100%|██████████| 3568/3568 [07:48<00:00,  7.62it/s]
model1_Confusion Matrix:
[[210  22  12]
 [ 29 318  18]
 [  9   3 272]]


model2_Confusion Matrix:
[[221  15   8]
 [ 57 302   6]
 [ 16   9 259]]


model_1: train loss: 0.2672 - train acc: 95.2074 - val loss: 0.4311 - val acc: 89.5857
model_2: train loss: 0.2677 - train acc: 95.2915 - val loss: 0.4525 - val acc: 87.5700
基测试集:
              precision    recall  f1-score   support

           0     0.8468    0.8607    0.8537       244
           1     0.9271    0.8712    0.8983       365
           2     0.9007    0.9577    0.9283       284

    accuracy                         0.8959       893
   macro avg     0.8915    0.8965    0.8934       893
weighted avg     0.8967    0.8959    0.8957       893

              precision    recall  f1-score   support

           0     0.7517    0.9057    0.8216       244
           1     0.9264    0.8274    0.8741       365
           2     0.9487    0.9120    0.9300       284

    accuracy                         0.8757       893
   macro avg     0.8756    0.8817    0.8752       893
weighted avg     0.8858    0.8757    0.8775       893


Epoch: 14/20 - LR: 0.000100
477.6s - model1_loss: 0.2370 - model1_acc: 96.3845 - model1_kl_loss: 0.0957- model2_kl_loss: 0.0915: 100%|██████████| 3568/3568 [07:58<00:00,  7.46it/s]
model1_Confusion Matrix:
[[217  19   8]
 [ 38 311  16]
 [  9   6 269]]


model2_Confusion Matrix:
[[209  22  13]
 [ 28 326  11]
 [  6   7 271]]


model_1: train loss: 0.2370 - train acc: 96.3845 - val loss: 0.3770 - val acc: 89.2497
model_2: train loss: 0.2360 - train acc: 96.1883 - val loss: 0.3753 - val acc: 90.2576
基测试集:
              precision    recall  f1-score   support

           0     0.8220    0.8893    0.8543       244
           1     0.9256    0.8521    0.8873       365
           2     0.9181    0.9472    0.9324       284

    accuracy                         0.8925       893
   macro avg     0.8886    0.8962    0.8913       893
weighted avg     0.8949    0.8925    0.8926       893

              precision    recall  f1-score   support

           0     0.8601    0.8566    0.8583       244
           1     0.9183    0.8932    0.9056       365
           2     0.9186    0.9542    0.9361       284

    accuracy                         0.9026       893
   macro avg     0.8990    0.9013    0.9000       893
weighted avg     0.9025    0.9026    0.9024       893


Epoch: 15/20 - LR: 0.000100
468.2s - model1_loss: 0.2489 - model1_acc: 95.9081 - model1_kl_loss: 0.0946- model2_kl_loss: 0.0970: 100%|██████████| 3568/3568 [07:48<00:00,  7.61it/s]
model1_Confusion Matrix:
[[215  22   7]
 [ 47 304  14]
 [  9   3 272]]


model2_Confusion Matrix:
[[218  16  10]
 [ 41 313  11]
 [ 12   4 268]]


model_1: train loss: 0.2489 - train acc: 95.9081 - val loss: 0.4292 - val acc: 88.5778
model_2: train loss: 0.2427 - train acc: 96.1323 - val loss: 0.4505 - val acc: 89.4737
  0%|          | 0/3568 [00:00<?, ?it/s]基测试集:
              precision    recall  f1-score   support

           0     0.7934    0.8811    0.8350       244
           1     0.9240    0.8329    0.8761       365
           2     0.9283    0.9577    0.9428       284

    accuracy                         0.8858       893
   macro avg     0.8819    0.8906    0.8846       893
weighted avg     0.8897    0.8858    0.8861       893

              precision    recall  f1-score   support

           0     0.8044    0.8934    0.8466       244
           1     0.9399    0.8575    0.8968       365
           2     0.9273    0.9437    0.9354       284

    accuracy                         0.8947       893
   macro avg     0.8906    0.8982    0.8930       893
weighted avg     0.8989    0.8947    0.8954       893


Epoch: 16/20 - LR: 0.000100
479.4s - model1_loss: 0.1994 - model1_acc: 97.4215 - model1_kl_loss: 0.0884- model2_kl_loss: 0.0882: 100%|██████████| 3568/3568 [08:00<00:00,  7.43it/s]
model1_Confusion Matrix:
[[216  20   8]
 [ 45 305  15]
 [ 10   2 272]]


model2_Confusion Matrix:
[[208  25  11]
 [ 38 309  18]
 [ 16   3 265]]


model_1: train loss: 0.1994 - train acc: 97.4215 - val loss: 0.3910 - val acc: 88.8018
model_2: train loss: 0.1982 - train acc: 97.4496 - val loss: 0.4293 - val acc: 87.5700
基测试集:
              precision    recall  f1-score   support

           0     0.7970    0.8852    0.8388       244
           1     0.9327    0.8356    0.8815       365
           2     0.9220    0.9577    0.9396       284

    accuracy                         0.8880       893
   macro avg     0.8839    0.8929    0.8866       893
weighted avg     0.8923    0.8880    0.8883       893

              precision    recall  f1-score   support

           0     0.7939    0.8525    0.8221       244
           1     0.9169    0.8466    0.8803       365
           2     0.9014    0.9331    0.9170       284

    accuracy                         0.8757       893
   macro avg     0.8707    0.8774    0.8731       893
weighted avg     0.8784    0.8757    0.8761       893


Epoch: 17/20 - LR: 0.000100
469.5s - model1_loss: 0.2157 - model1_acc: 96.8049 - model1_kl_loss: 0.0972- model2_kl_loss: 0.0993: 100%|██████████| 3568/3568 [07:50<00:00,  7.59it/s]
model1_Confusion Matrix:
[[204  23  17]
 [ 32 310  23]
 [  8   1 275]]


model2_Confusion Matrix:
[[225  14   5]
 [ 35 323   7]
 [ 18   8 258]]


model_1: train loss: 0.2157 - train acc: 96.8049 - val loss: 0.4840 - val acc: 88.3539
model_2: train loss: 0.2128 - train acc: 97.1693 - val loss: 0.4250 - val acc: 90.2576
基测试集:
              precision    recall  f1-score   support

           0     0.8361    0.8361    0.8361       244
           1     0.9281    0.8493    0.8870       365
           2     0.8730    0.9683    0.9182       284

    accuracy                         0.8835       893
   macro avg     0.8791    0.8846    0.8804       893
weighted avg     0.8855    0.8835    0.8830       893

              precision    recall  f1-score   support

           0     0.8094    0.9221    0.8621       244
           1     0.9362    0.8849    0.9099       365
           2     0.9556    0.9085    0.9314       284

    accuracy                         0.9026       893
   macro avg     0.9004    0.9052    0.9011       893
weighted avg     0.9077    0.9026    0.9037       893


Epoch: 18/20 - LR: 0.000100
468.9s - model1_loss: 0.1885 - model1_acc: 97.4215 - model1_kl_loss: 0.0882- model2_kl_loss: 0.0885: 100%|██████████| 3568/3568 [07:49<00:00,  7.60it/s]
model1_Confusion Matrix:
[[196  37  11]
 [ 11 340  14]
 [  8   6 270]]


model2_Confusion Matrix:
[[187  51   6]
 [ 20 335  10]
 [ 11  13 260]]


model_1: train loss: 0.1885 - train acc: 97.4215 - val loss: 0.4622 - val acc: 90.2576 [*]
model_2: train loss: 0.1914 - train acc: 97.4215 - val loss: 0.4728 - val acc: 87.5700
基测试集:
              precision    recall  f1-score   support

           0     0.9116    0.8033    0.8540       244
           1     0.8877    0.9315    0.9091       365
           2     0.9153    0.9507    0.9326       284

    accuracy                         0.9026       893
   macro avg     0.9049    0.8952    0.8986       893
weighted avg     0.9030    0.9026    0.9015       893

              precision    recall  f1-score   support

           0     0.8578    0.7664    0.8095       244
           1     0.8396    0.9178    0.8770       365
           2     0.9420    0.9155    0.9286       284

    accuracy                         0.8757       893
   macro avg     0.8798    0.8666    0.8717       893
weighted avg     0.8771    0.8757    0.8749       893


Epoch: 19/20 - LR: 0.000100
470.0s - model1_loss: 0.1770 - model1_acc: 97.9540 - model1_kl_loss: 0.0858- model2_kl_loss: 0.0851: 100%|██████████| 3568/3568 [07:50<00:00,  7.58it/s]
model1_Confusion Matrix:
[[194  37  13]
 [ 20 335  10]
 [  7   8 269]]


model2_Confusion Matrix:
[[222  16   6]
 [ 44 314   7]
 [ 15   9 260]]


model_1: train loss: 0.1770 - train acc: 97.9540 - val loss: 0.4917 - val acc: 89.3617
model_2: train loss: 0.1799 - train acc: 97.8139 - val loss: 0.4918 - val acc: 89.1377
基测试集:
              precision    recall  f1-score   support

           0     0.8778    0.7951    0.8344       244
           1     0.8816    0.9178    0.8993       365
           2     0.9212    0.9472    0.9340       284

    accuracy                         0.8936       893
   macro avg     0.8935    0.8867    0.8893       893
weighted avg     0.8932    0.8936    0.8926       893

              precision    recall  f1-score   support

           0     0.7900    0.9098    0.8457       244
           1     0.9263    0.8603    0.8920       365
           2     0.9524    0.9155    0.9336       284

    accuracy                         0.8914       893
   macro avg     0.8896    0.8952    0.8904       893
weighted avg     0.8973    0.8914    0.8926       893


Epoch: 20/20 - LR: 0.000100
491.2s - model1_loss: 0.1814 - model1_acc: 98.2343 - model1_kl_loss: 0.0914- model2_kl_loss: 0.0905: 100%|██████████| 3568/3568 [08:12<00:00,  7.25it/s]
model1_Confusion Matrix:
[[215  25   4]
 [ 32 329   4]
 [ 20  12 252]]


model2_Confusion Matrix:
[[186  49   9]
 [ 23 327  15]
 [  6  10 268]]


model_1: train loss: 0.1814 - train acc: 98.2343 - val loss: 0.4420 - val acc: 89.1377
model_2: train loss: 0.1841 - train acc: 97.7859 - val loss: 0.4798 - val acc: 87.4580
基测试集:
              precision    recall  f1-score   support

           0     0.8052    0.8811    0.8415       244
           1     0.8989    0.9014    0.9001       365
           2     0.9692    0.8873    0.9265       284

    accuracy                         0.8914       893
   macro avg     0.8911    0.8899    0.8894       893
weighted avg     0.8957    0.8914    0.8925       893

              precision    recall  f1-score   support

           0     0.8651    0.7623    0.8105       244
           1     0.8472    0.8959    0.8708       365
           2     0.9178    0.9437    0.9306       284

    accuracy                         0.8746       893
   macro avg     0.8767    0.8673    0.8706       893
weighted avg     0.8745    0.8746    0.8733       893

model1_Confusion Matrix:
[[400  49  13]
 [ 58 539   9]
 [ 27  24 368]]


model2_Confusion Matrix:
[[346  89  27]
 [ 43 543  20]
 [ 11  15 393]]


元测试集:
              precision    recall  f1-score   support

           0     0.8247    0.8658    0.8448       462
           1     0.8807    0.8894    0.8851       606
           2     0.9436    0.8783    0.9098       419

    accuracy                         0.8790      1487
   macro avg     0.8830    0.8778    0.8799      1487
weighted avg     0.8810    0.8790    0.8795      1487

              precision    recall  f1-score   support

           0     0.8650    0.7489    0.8028       462
           1     0.8393    0.8960    0.8667       606
           2     0.8932    0.9379    0.9150       419

    accuracy                         0.8621      1487
   macro avg     0.8658    0.8610    0.8615      1487
weighted avg     0.8625    0.8621    0.8605      1487

元测试集5次求平均：
第二个算法：
DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=3, bias=True)
)
DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=3, bias=True)
)
[*] Number of parameters of one model: 7,016,323
[*] Number of parameters of one model: 7,016,323
第1折:
[*] Model Checkpoint Dir: ./ckpt
[*] Param Path: ./ckpt\model_params.json

[*] Train on 3568 samples, validate on 893 samples, meta_validate on 1487 samples

Epoch: 1/20 - LR: 0.000100
473.0s - model1_loss: 0.6742 - model1_acc: 74.1592 - model1_kl_loss: 0.0437- model2_kl_loss: 0.0442: 100%|██████████| 3568/3568 [07:53<00:00,  7.53it/s]
model1_Confusion Matrix:
[[198  32  14]
 [ 30 282  53]
 [ 12  17 255]]


model2_Confusion Matrix:
[[213  22   9]
 [ 40 288  37]
 [ 18  18 248]]


model_1: train loss: 0.6742 - train acc: 74.1592 - val loss: 0.5163 - val acc: 82.3068 [*]
model_2: train loss: 0.6709 - train acc: 74.5516 - val loss: 0.4701 - val acc: 83.8746 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8250    0.8115    0.8182       244
           1     0.8520    0.7726    0.8103       365
           2     0.7919    0.8979    0.8416       284

    accuracy                         0.8231       893
   macro avg     0.8230    0.8273    0.8234       893
weighted avg     0.8255    0.8231    0.8224       893

              precision    recall  f1-score   support

           0     0.7860    0.8730    0.8272       244
           1     0.8780    0.7890    0.8312       365
           2     0.8435    0.8732    0.8581       284

    accuracy                         0.8387       893
   macro avg     0.8359    0.8451    0.8388       893
weighted avg     0.8419    0.8387    0.8387       893


Epoch: 2/20 - LR: 0.000100
469.3s - model1_loss: 0.5435 - model1_acc: 81.2500 - model1_kl_loss: 0.0541- model2_kl_loss: 0.0543: 100%|██████████| 3568/3568 [07:49<00:00,  7.59it/s]
model1_Confusion Matrix:
[[215  21   8]
 [ 62 281  22]
 [ 25  10 249]]


model2_Confusion Matrix:
[[217  22   5]
 [ 49 297  19]
 [ 23   9 252]]


model_1: train loss: 0.5435 - train acc: 81.2500 - val loss: 0.5076 - val acc: 83.4267 [*]
model_2: train loss: 0.5474 - train acc: 81.1379 - val loss: 0.4461 - val acc: 85.7783 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.7119    0.8811    0.7875       244
           1     0.9006    0.7699    0.8301       365
           2     0.8925    0.8768    0.8845       284

    accuracy                         0.8343       893
   macro avg     0.8350    0.8426    0.8341       893
weighted avg     0.8465    0.8343    0.8358       893

              precision    recall  f1-score   support

           0     0.7509    0.8893    0.8143       244
           1     0.9055    0.8137    0.8571       365
           2     0.9130    0.8873    0.9000       284

    accuracy                         0.8578       893
   macro avg     0.8565    0.8635    0.8571       893
weighted avg     0.8656    0.8578    0.8591       893


Epoch: 3/20 - LR: 0.000100
502.7s - model1_loss: 0.4842 - model1_acc: 84.7253 - model1_kl_loss: 0.0661- model2_kl_loss: 0.0660: 100%|██████████| 3568/3568 [08:23<00:00,  7.08it/s]
model1_Confusion Matrix:
[[211  25   8]
 [ 50 298  17]
 [ 18  12 254]]


model2_Confusion Matrix:
[[210  29   5]
 [ 38 321   6]
 [ 17  21 246]]


model_1: train loss: 0.4842 - train acc: 84.7253 - val loss: 0.4210 - val acc: 85.4423 [*]
model_2: train loss: 0.4710 - train acc: 85.1177 - val loss: 0.4026 - val acc: 87.0101 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.7563    0.8648    0.8069       244
           1     0.8896    0.8164    0.8514       365
           2     0.9104    0.8944    0.9023       284

    accuracy                         0.8544       893
   macro avg     0.8521    0.8585    0.8535       893
weighted avg     0.8598    0.8544    0.8554       893

              precision    recall  f1-score   support

           0     0.7925    0.8607    0.8251       244
           1     0.8652    0.8795    0.8723       365
           2     0.9572    0.8662    0.9094       284

    accuracy                         0.8701       893
   macro avg     0.8716    0.8688    0.8690       893
weighted avg     0.8746    0.8701    0.8712       893


Epoch: 4/20 - LR: 0.000100
469.6s - model1_loss: 0.4525 - model1_acc: 86.9114 - model1_kl_loss: 0.0770- model2_kl_loss: 0.0769: 100%|██████████| 3568/3568 [07:50<00:00,  7.59it/s]
model1_Confusion Matrix:
[[209  23  12]
 [ 27 323  15]
 [ 14  10 260]]


model2_Confusion Matrix:
[[205  35   4]
 [ 19 340   6]
 [  8  17 259]]


model_1: train loss: 0.4525 - train acc: 86.9114 - val loss: 0.3927 - val acc: 88.6898 [*]
model_2: train loss: 0.4525 - train acc: 86.9114 - val loss: 0.3704 - val acc: 90.0336 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8360    0.8566    0.8462       244
           1     0.9073    0.8849    0.8960       365
           2     0.9059    0.9155    0.9107       284

    accuracy                         0.8869       893
   macro avg     0.8831    0.8857    0.8843       893
weighted avg     0.8874    0.8869    0.8870       893

              precision    recall  f1-score   support

           0     0.8836    0.8402    0.8613       244
           1     0.8673    0.9315    0.8983       365
           2     0.9628    0.9120    0.9367       284

    accuracy                         0.9003       893
   macro avg     0.9046    0.8945    0.8988       893
weighted avg     0.9022    0.9003    0.9004       893


Epoch: 5/20 - LR: 0.000100
470.2s - model1_loss: 0.3840 - model1_acc: 89.6861 - model1_kl_loss: 0.0778- model2_kl_loss: 0.0794: 100%|██████████| 3568/3568 [07:50<00:00,  7.58it/s]
model1_Confusion Matrix:
[[210  27   7]
 [ 41 312  12]
 [  8  11 265]]


model2_Confusion Matrix:
[[211  30   3]
 [ 35 326   4]
 [ 16  11 257]]


model_1: train loss: 0.3840 - train acc: 89.6861 - val loss: 0.3890 - val acc: 88.1299
model_2: train loss: 0.3832 - train acc: 89.4058 - val loss: 0.3974 - val acc: 88.9138
基测试集:
              precision    recall  f1-score   support

           0     0.8108    0.8607    0.8350       244
           1     0.8914    0.8548    0.8727       365
           2     0.9331    0.9331    0.9331       284

    accuracy                         0.8813       893
   macro avg     0.8784    0.8828    0.8803       893
weighted avg     0.8827    0.8813    0.8816       893

              precision    recall  f1-score   support

           0     0.8053    0.8648    0.8340       244
           1     0.8883    0.8932    0.8907       365
           2     0.9735    0.9049    0.9380       284

    accuracy                         0.8891       893
   macro avg     0.8890    0.8876    0.8876       893
weighted avg     0.8927    0.8891    0.8902       893


Epoch: 6/20 - LR: 0.000100
468.9s - model1_loss: 0.3902 - model1_acc: 89.9103 - model1_kl_loss: 0.0884- model2_kl_loss: 0.0899: 100%|██████████| 3568/3568 [07:49<00:00,  7.60it/s]
model1_Confusion Matrix:
[[206  28  10]
 [ 39 319   7]
 [ 10   7 267]]


model2_Confusion Matrix:
[[213  22   9]
 [ 40 316   9]
 [ 20   9 255]]


model_1: train loss: 0.3902 - train acc: 89.9103 - val loss: 0.3912 - val acc: 88.6898
model_2: train loss: 0.3769 - train acc: 89.8823 - val loss: 0.4232 - val acc: 87.7940
基测试集:
              precision    recall  f1-score   support

           0     0.8078    0.8443    0.8257       244
           1     0.9011    0.8740    0.8873       365
           2     0.9401    0.9401    0.9401       284

    accuracy                         0.8869       893
   macro avg     0.8830    0.8861    0.8844       893
weighted avg     0.8880    0.8869    0.8873       893

              precision    recall  f1-score   support

           0     0.7802    0.8730    0.8240       244
           1     0.9107    0.8658    0.8876       365
           2     0.9341    0.8979    0.9156       284

    accuracy                         0.8779       893
   macro avg     0.8750    0.8789    0.8757       893
weighted avg     0.8825    0.8779    0.8791       893


Epoch: 7/20 - LR: 0.000100
472.9s - model1_loss: 0.3320 - model1_acc: 92.3487 - model1_kl_loss: 0.0864- model2_kl_loss: 0.0863: 100%|██████████| 3568/3568 [07:53<00:00,  7.54it/s]
model1_Confusion Matrix:
[[181  41  22]
 [ 11 335  19]
 [  2   3 279]]


model2_Confusion Matrix:
[[201  29  14]
 [ 25 323  17]
 [  8   9 267]]


model_1: train loss: 0.3320 - train acc: 92.3487 - val loss: 0.4021 - val acc: 89.0258 [*]
model_2: train loss: 0.3454 - train acc: 91.9002 - val loss: 0.4005 - val acc: 88.5778
基测试集:
              precision    recall  f1-score   support

           0     0.9330    0.7418    0.8265       244
           1     0.8839    0.9178    0.9005       365
           2     0.8719    0.9824    0.9238       284

    accuracy                         0.8903       893
   macro avg     0.8963    0.8807    0.8836       893
weighted avg     0.8935    0.8903    0.8877       893

              precision    recall  f1-score   support

           0     0.8590    0.8238    0.8410       244
           1     0.8947    0.8849    0.8898       365
           2     0.8960    0.9401    0.9175       284

    accuracy                         0.8858       893
   macro avg     0.8832    0.8829    0.8828       893
weighted avg     0.8854    0.8858    0.8853       893


Epoch: 8/20 - LR: 0.000100
472.9s - model1_loss: 0.3319 - model1_acc: 92.4888 - model1_kl_loss: 0.0997- model2_kl_loss: 0.1012: 100%|██████████| 3568/3568 [07:53<00:00,  7.54it/s]
model1_Confusion Matrix:
[[205  34   5]
 [ 16 338  11]
 [  8   8 268]]


model2_Confusion Matrix:
[[204  31   9]
 [ 32 329   4]
 [ 15  14 255]]


model_1: train loss: 0.3319 - train acc: 92.4888 - val loss: 0.3934 - val acc: 90.8175 [*]
model_2: train loss: 0.3351 - train acc: 92.5729 - val loss: 0.4327 - val acc: 88.2419
基测试集:
              precision    recall  f1-score   support

           0     0.8952    0.8402    0.8668       244
           1     0.8895    0.9260    0.9074       365
           2     0.9437    0.9437    0.9437       284

    accuracy                         0.9082       893
   macro avg     0.9094    0.9033    0.9060       893
weighted avg     0.9083    0.9082    0.9078       893

              precision    recall  f1-score   support

           0     0.8127    0.8361    0.8242       244
           1     0.8797    0.9014    0.8904       365
           2     0.9515    0.8979    0.9239       284

    accuracy                         0.8824       893
   macro avg     0.8813    0.8784    0.8795       893
weighted avg     0.8842    0.8824    0.8830       893


Epoch: 9/20 - LR: 0.000100
472.8s - model1_loss: 0.3347 - model1_acc: 93.2175 - model1_kl_loss: 0.1027- model2_kl_loss: 0.1010: 100%|██████████| 3568/3568 [07:53<00:00,  7.54it/s]
model1_Confusion Matrix:
[[218  23   3]
 [ 52 302  11]
 [ 16  10 258]]


model2_Confusion Matrix:
[[212  31   1]
 [ 31 332   2]
 [ 20  23 241]]


model_1: train loss: 0.3347 - train acc: 93.2175 - val loss: 0.4910 - val acc: 87.1221
model_2: train loss: 0.3200 - train acc: 93.4978 - val loss: 0.4664 - val acc: 87.9059
基测试集:
              precision    recall  f1-score   support

           0     0.7622    0.8934    0.8226       244
           1     0.9015    0.8274    0.8629       365
           2     0.9485    0.9085    0.9281       284

    accuracy                         0.8712       893
   macro avg     0.8708    0.8764    0.8712       893
weighted avg     0.8784    0.8712    0.8726       893

              precision    recall  f1-score   support

           0     0.8061    0.8689    0.8363       244
           1     0.8601    0.9096    0.8842       365
           2     0.9877    0.8486    0.9129       284

    accuracy                         0.8791       893
   macro avg     0.8846    0.8757    0.8778       893
weighted avg     0.8859    0.8791    0.8802       893


Epoch: 10/20 - LR: 0.000100
471.1s - model1_loss: 0.2916 - model1_acc: 93.4137 - model1_kl_loss: 0.0870- model2_kl_loss: 0.0896: 100%|██████████| 3568/3568 [07:51<00:00,  7.56it/s]
model1_Confusion Matrix:
[[214  24   6]
 [ 36 324   5]
 [  9   8 267]]


model2_Confusion Matrix:
[[215  25   4]
 [ 37 322   6]
 [ 19   6 259]]


model_1: train loss: 0.2916 - train acc: 93.4137 - val loss: 0.3879 - val acc: 90.1456
model_2: train loss: 0.2879 - train acc: 94.2825 - val loss: 0.3999 - val acc: 89.1377
基测试集:
              precision    recall  f1-score   support

           0     0.8263    0.8770    0.8509       244
           1     0.9101    0.8877    0.8988       365
           2     0.9604    0.9401    0.9502       284

    accuracy                         0.9015       893
   macro avg     0.8989    0.9016    0.8999       893
weighted avg     0.9032    0.9015    0.9020       893

              precision    recall  f1-score   support

           0     0.7934    0.8811    0.8350       244
           1     0.9122    0.8822    0.8969       365
           2     0.9628    0.9120    0.9367       284

    accuracy                         0.8914       893
   macro avg     0.8895    0.8918    0.8895       893
weighted avg     0.8958    0.8914    0.8926       893


Epoch: 11/20 - LR: 0.000100
472.6s - model1_loss: 0.2582 - model1_acc: 94.7590 - model1_kl_loss: 0.0889- model2_kl_loss: 0.0907: 100%|██████████| 3568/3568 [07:53<00:00,  7.54it/s]
model1_Confusion Matrix:
[[204  35   5]
 [ 26 331   8]
 [ 13  11 260]]


model2_Confusion Matrix:
[[196  46   2]
 [ 22 339   4]
 [ 18  17 249]]


model_1: train loss: 0.2582 - train acc: 94.7590 - val loss: 0.4034 - val acc: 89.0258
model_2: train loss: 0.2604 - train acc: 94.9271 - val loss: 0.4530 - val acc: 87.7940
基测试集:
              precision    recall  f1-score   support

           0     0.8395    0.8361    0.8378       244
           1     0.8780    0.9068    0.8922       365
           2     0.9524    0.9155    0.9336       284

    accuracy                         0.8903       893
   macro avg     0.8900    0.8861    0.8878       893
weighted avg     0.8911    0.8903    0.8905       893

              precision    recall  f1-score   support

           0     0.8305    0.8033    0.8167       244
           1     0.8433    0.9288    0.8840       365
           2     0.9765    0.8768    0.9239       284

    accuracy                         0.8779       893
   macro avg     0.8834    0.8696    0.8749       893
weighted avg     0.8822    0.8779    0.8783       893


Epoch: 12/20 - LR: 0.000100
472.7s - model1_loss: 0.2615 - model1_acc: 95.2915 - model1_kl_loss: 0.0957- model2_kl_loss: 0.0953: 100%|██████████| 3568/3568 [07:53<00:00,  7.54it/s]
model1_Confusion Matrix:
[[219  17   8]
 [ 48 310   7]
 [ 14  12 258]]


model2_Confusion Matrix:
[[215  22   7]
 [ 32 324   9]
 [ 13   8 263]]


model_1: train loss: 0.2615 - train acc: 95.2915 - val loss: 0.4211 - val acc: 88.1299
model_2: train loss: 0.2611 - train acc: 95.4036 - val loss: 0.4706 - val acc: 89.8096
基测试集:
              precision    recall  f1-score   support

           0     0.7794    0.8975    0.8343       244
           1     0.9145    0.8493    0.8807       365
           2     0.9451    0.9085    0.9264       284

    accuracy                         0.8813       893
   macro avg     0.8796    0.8851    0.8805       893
weighted avg     0.8873    0.8813    0.8825       893

              precision    recall  f1-score   support

           0     0.8269    0.8811    0.8532       244
           1     0.9153    0.8877    0.9013       365
           2     0.9427    0.9261    0.9343       284

    accuracy                         0.8981       893
   macro avg     0.8949    0.8983    0.8962       893
weighted avg     0.8998    0.8981    0.8986       893


Epoch: 13/20 - LR: 0.000100
477.2s - model1_loss: 0.2367 - model1_acc: 96.4126 - model1_kl_loss: 0.1000- model2_kl_loss: 0.0990: 100%|██████████| 3568/3568 [07:58<00:00,  7.46it/s]
model1_Confusion Matrix:
[[195  40   9]
 [ 19 337   9]
 [  7   6 271]]


model2_Confusion Matrix:
[[189  40  15]
 [ 15 333  17]
 [  4   3 277]]


model_1: train loss: 0.2367 - train acc: 96.4126 - val loss: 0.3841 - val acc: 89.9216
model_2: train loss: 0.2358 - train acc: 96.6928 - val loss: 0.3928 - val acc: 89.4737
基测试集:
              precision    recall  f1-score   support

           0     0.8824    0.7992    0.8387       244
           1     0.8799    0.9233    0.9011       365
           2     0.9377    0.9542    0.9459       284

    accuracy                         0.8992       893
   macro avg     0.9000    0.8922    0.8952       893
weighted avg     0.8990    0.8992    0.8983       893

              precision    recall  f1-score   support

           0     0.9087    0.7746    0.8363       244
           1     0.8856    0.9123    0.8988       365
           2     0.8964    0.9754    0.9342       284

    accuracy                         0.8947       893
   macro avg     0.8969    0.8874    0.8898       893
weighted avg     0.8954    0.8947    0.8930       893


Epoch: 14/20 - LR: 0.000100
485.1s - model1_loss: 0.2313 - model1_acc: 96.0202 - model1_kl_loss: 0.0924- model2_kl_loss: 0.0923: 100%|██████████| 3568/3568 [08:05<00:00,  7.34it/s]
model1_Confusion Matrix:
[[208  31   5]
 [ 27 333   5]
 [ 15   7 262]]


model2_Confusion Matrix:
[[204  33   7]
 [ 23 336   6]
 [  5  13 266]]


model_1: train loss: 0.2313 - train acc: 96.0202 - val loss: 0.4239 - val acc: 89.9216
model_2: train loss: 0.2353 - train acc: 96.0762 - val loss: 0.4172 - val acc: 90.2576 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8320    0.8525    0.8421       244
           1     0.8976    0.9123    0.9049       365
           2     0.9632    0.9225    0.9424       284

    accuracy                         0.8992       893
   macro avg     0.8976    0.8958    0.8965       893
weighted avg     0.9005    0.8992    0.8997       893

              precision    recall  f1-score   support

           0     0.8793    0.8361    0.8571       244
           1     0.8796    0.9205    0.8996       365
           2     0.9534    0.9366    0.9449       284

    accuracy                         0.9026       893
   macro avg     0.9041    0.8977    0.9006       893
weighted avg     0.9030    0.9026    0.9024       893


Epoch: 15/20 - LR: 0.000100
546.1s - model1_loss: 0.2311 - model1_acc: 96.7769 - model1_kl_loss: 0.0979- model2_kl_loss: 0.1018: 100%|██████████| 3568/3568 [09:07<00:00,  6.51it/s]
model1_Confusion Matrix:
[[225  15   4]
 [ 59 297   9]
 [ 22   4 258]]


model2_Confusion Matrix:
[[213  25   6]
 [ 44 314   7]
 [ 21   7 256]]


model_1: train loss: 0.2311 - train acc: 96.7769 - val loss: 0.4759 - val acc: 87.3460
model_2: train loss: 0.2311 - train acc: 96.7489 - val loss: 0.4423 - val acc: 87.6820
基测试集:
              precision    recall  f1-score   support

           0     0.7353    0.9221    0.8182       244
           1     0.9399    0.8137    0.8722       365
           2     0.9520    0.9085    0.9297       284

    accuracy                         0.8735       893
   macro avg     0.8757    0.8814    0.8734       893
weighted avg     0.8878    0.8735    0.8758       893

              precision    recall  f1-score   support

           0     0.7662    0.8730    0.8161       244
           1     0.9075    0.8603    0.8833       365
           2     0.9517    0.9014    0.9259       284

    accuracy                         0.8768       893
   macro avg     0.8751    0.8782    0.8751       893
weighted avg     0.8829    0.8768    0.8785       893


Epoch: 16/20 - LR: 0.000100
533.5s - model1_loss: 0.1990 - model1_acc: 96.9451 - model1_kl_loss: 0.0877- model2_kl_loss: 0.0900: 100%|██████████| 3568/3568 [08:54<00:00,  6.67it/s]
model1_Confusion Matrix:
[[209  24  11]
 [ 30 326   9]
 [  9   9 266]]


model2_Confusion Matrix:
[[213  23   8]
 [ 46 305  14]
 [ 13   8 263]]


model_1: train loss: 0.1990 - train acc: 96.9451 - val loss: 0.4147 - val acc: 89.6976
model_2: train loss: 0.1933 - train acc: 97.5617 - val loss: 0.4536 - val acc: 87.4580
基测试集:
              precision    recall  f1-score   support

           0     0.8427    0.8566    0.8496       244
           1     0.9081    0.8932    0.9006       365
           2     0.9301    0.9366    0.9333       284

    accuracy                         0.8970       893
   macro avg     0.8936    0.8954    0.8945       893
weighted avg     0.8972    0.8970    0.8971       893

              precision    recall  f1-score   support

           0     0.7831    0.8730    0.8256       244
           1     0.9077    0.8356    0.8702       365
           2     0.9228    0.9261    0.9244       284

    accuracy                         0.8746       893
   macro avg     0.8712    0.8782    0.8734       893
weighted avg     0.8785    0.8746    0.8752       893


Epoch: 17/20 - LR: 0.000100
517.9s - model1_loss: 0.1974 - model1_acc: 97.0852 - model1_kl_loss: 0.0897- model2_kl_loss: 0.0886: 100%|██████████| 3568/3568 [08:38<00:00,  6.88it/s]
model1_Confusion Matrix:
[[216  19   9]
 [ 49 298  18]
 [ 14   6 264]]


model2_Confusion Matrix:
[[206  33   5]
 [ 25 335   5]
 [ 17  11 256]]


model_1: train loss: 0.1974 - train acc: 97.0852 - val loss: 0.5000 - val acc: 87.1221
model_2: train loss: 0.2028 - train acc: 97.1413 - val loss: 0.4853 - val acc: 89.2497
基测试集:
              precision    recall  f1-score   support

           0     0.7742    0.8852    0.8260       244
           1     0.9226    0.8164    0.8663       365
           2     0.9072    0.9296    0.9183       284

    accuracy                         0.8712       893
   macro avg     0.8680    0.8771    0.8702       893
weighted avg     0.8772    0.8712    0.8718       893

              precision    recall  f1-score   support

           0     0.8306    0.8443    0.8374       244
           1     0.8839    0.9178    0.9005       365
           2     0.9624    0.9014    0.9309       284

    accuracy                         0.8925       893
   macro avg     0.8923    0.8878    0.8896       893
weighted avg     0.8943    0.8925    0.8929       893


Epoch: 18/20 - LR: 0.000100
516.9s - model1_loss: 0.2002 - model1_acc: 97.2534 - model1_kl_loss: 0.0911- model2_kl_loss: 0.0940: 100%|██████████| 3568/3568 [08:37<00:00,  6.89it/s]
model1_Confusion Matrix:
[[192  41  11]
 [  9 346  10]
 [  7  10 267]]


model2_Confusion Matrix:
[[216  26   2]
 [ 42 314   9]
 [ 19   8 257]]


model_1: train loss: 0.2002 - train acc: 97.2534 - val loss: 0.4559 - val acc: 90.1456
model_2: train loss: 0.1963 - train acc: 97.8139 - val loss: 0.4471 - val acc: 88.1299
基测试集:
              precision    recall  f1-score   support

           0     0.9231    0.7869    0.8496       244
           1     0.8715    0.9479    0.9081       365
           2     0.9271    0.9401    0.9336       284

    accuracy                         0.9015       893
   macro avg     0.9072    0.8917    0.8971       893
weighted avg     0.9033    0.9015    0.9002       893

              precision    recall  f1-score   support

           0     0.7798    0.8852    0.8292       244
           1     0.9023    0.8603    0.8808       365
           2     0.9590    0.9049    0.9312       284

    accuracy                         0.8813       893
   macro avg     0.8803    0.8835    0.8804       893
weighted avg     0.8868    0.8813    0.8827       893


Epoch: 19/20 - LR: 0.000100
514.2s - model1_loss: 0.1847 - model1_acc: 97.7018 - model1_kl_loss: 0.0857- model2_kl_loss: 0.0901: 100%|██████████| 3568/3568 [08:34<00:00,  6.93it/s]
model1_Confusion Matrix:
[[203  38   3]
 [ 18 341   6]
 [ 11  17 256]]


model2_Confusion Matrix:
[[205  35   4]
 [ 35 319  11]
 [ 18   8 258]]


model_1: train loss: 0.1847 - train acc: 97.7018 - val loss: 0.4462 - val acc: 89.5857
model_2: train loss: 0.1825 - train acc: 98.0381 - val loss: 0.4490 - val acc: 87.5700
  0%|          | 0/3568 [00:00<?, ?it/s]基测试集:
              precision    recall  f1-score   support

           0     0.8750    0.8320    0.8529       244
           1     0.8611    0.9342    0.8962       365
           2     0.9660    0.9014    0.9326       284

    accuracy                         0.8959       893
   macro avg     0.9007    0.8892    0.8939       893
weighted avg     0.8983    0.8959    0.8960       893

              precision    recall  f1-score   support

           0     0.7946    0.8402    0.8167       244
           1     0.8812    0.8740    0.8776       365
           2     0.9451    0.9085    0.9264       284

    accuracy                         0.8757       893
   macro avg     0.8736    0.8742    0.8736       893
weighted avg     0.8778    0.8757    0.8765       893


Epoch: 20/20 - LR: 0.000100
514.9s - model1_loss: 0.1607 - model1_acc: 98.3184 - model1_kl_loss: 0.0803- model2_kl_loss: 0.0785: 100%|██████████| 3568/3568 [08:35<00:00,  6.92it/s]
model1_Confusion Matrix:
[[220  20   4]
 [ 42 315   8]
 [ 12   7 265]]


model2_Confusion Matrix:
[[195  42   7]
 [ 19 329  17]
 [ 12   9 263]]


model_1: train loss: 0.1607 - train acc: 98.3184 - val loss: 0.4414 - val acc: 89.5857
model_2: train loss: 0.1582 - train acc: 98.2623 - val loss: 0.4881 - val acc: 88.1299
基测试集:
              precision    recall  f1-score   support

           0     0.8029    0.9016    0.8494       244
           1     0.9211    0.8630    0.8911       365
           2     0.9567    0.9331    0.9447       284

    accuracy                         0.8959       893
   macro avg     0.8936    0.8993    0.8951       893
weighted avg     0.9001    0.8959    0.8968       893

              precision    recall  f1-score   support

           0     0.8628    0.7992    0.8298       244
           1     0.8658    0.9014    0.8832       365
           2     0.9164    0.9261    0.9212       284

    accuracy                         0.8813       893
   macro avg     0.8817    0.8755    0.8781       893
weighted avg     0.8811    0.8813    0.8807       893

model1_Confusion Matrix:
[[396  52  14]
 [ 79 517  10]
 [ 27  13 379]]


model2_Confusion Matrix:
[[354  81  27]
 [ 27 553  26]
 [ 21  10 388]]


元测试集:
              precision    recall  f1-score   support

           0     0.7888    0.8571    0.8216       462
           1     0.8883    0.8531    0.8704       606
           2     0.9404    0.9045    0.9221       419

    accuracy                         0.8689      1487
   macro avg     0.8725    0.8716    0.8714      1487
weighted avg     0.8721    0.8689    0.8698      1487

              precision    recall  f1-score   support

           0     0.8806    0.7662    0.8194       462
           1     0.8587    0.9125    0.8848       606
           2     0.8798    0.9260    0.9023       419

    accuracy                         0.8709      1487
   macro avg     0.8730    0.8683    0.8689      1487
weighted avg     0.8715    0.8709    0.8694      1487

元测试集5次求平均：
第三个算法：
DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=3, bias=True)
)
DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (eca): eca_layer(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (conv): Conv1d(1, 32, kernel_size=(32,), stride=(1,), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=3, bias=True)
)
[*] Number of parameters of one model: 7,016,323
[*] Number of parameters of one model: 7,016,323
第1折:
[*] Model Checkpoint Dir: ./ckpt
[*] Param Path: ./ckpt\model_params.json

[*] Train on 3568 samples, validate on 893 samples, meta_validate on 1487 samples

Epoch: 1/20 - LR: 0.000100
517.5s - model1_loss: 0.6850 - model1_acc: 73.7108 - model1_kl_loss: 0.0475- model2_kl_loss: 0.0475: 100%|██████████| 3568/3568 [08:38<00:00,  6.89it/s]
model1_Confusion Matrix:
[[207  35   2]
 [ 50 311   4]
 [ 19  21 244]]


model2_Confusion Matrix:
[[212  32   0]
 [ 45 316   4]
 [ 27  21 236]]


model_1: train loss: 0.6850 - train acc: 73.7108 - val loss: 0.4503 - val acc: 85.3303 [*]
model_2: train loss: 0.6807 - train acc: 73.8229 - val loss: 0.4593 - val acc: 85.5543 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.7500    0.8484    0.7962       244
           1     0.8474    0.8521    0.8497       365
           2     0.9760    0.8592    0.9139       284

    accuracy                         0.8533       893
   macro avg     0.8578    0.8532    0.8532       893
weighted avg     0.8617    0.8533    0.8555       893

              precision    recall  f1-score   support

           0     0.7465    0.8689    0.8030       244
           1     0.8564    0.8658    0.8610       365
           2     0.9833    0.8310    0.9008       284

    accuracy                         0.8555       893
   macro avg     0.8621    0.8552    0.8549       893
weighted avg     0.8667    0.8555    0.8578       893


Epoch: 2/20 - LR: 0.000100
516.3s - model1_loss: 0.5408 - model1_acc: 81.9787 - model1_kl_loss: 0.0578- model2_kl_loss: 0.0582: 100%|██████████| 3568/3568 [08:36<00:00,  6.90it/s]
model1_Confusion Matrix:
[[167  70   7]
 [ 12 344   9]
 [  5  22 257]]


model2_Confusion Matrix:
[[167  59  18]
 [ 13 337  15]
 [  2  28 254]]


model_1: train loss: 0.5408 - train acc: 81.9787 - val loss: 0.4519 - val acc: 86.0022 [*]
model_2: train loss: 0.5468 - train acc: 81.0818 - val loss: 0.4683 - val acc: 84.8824
基测试集:
              precision    recall  f1-score   support

           0     0.9076    0.6844    0.7804       244
           1     0.7890    0.9425    0.8589       365
           2     0.9414    0.9049    0.9228       284

    accuracy                         0.8600       893
   macro avg     0.8793    0.8439    0.8540       893
weighted avg     0.8699    0.8600    0.8578       893

              precision    recall  f1-score   support

           0     0.9176    0.6844    0.7840       244
           1     0.7948    0.9233    0.8542       365
           2     0.8850    0.8944    0.8897       284

    accuracy                         0.8488       893
   macro avg     0.8658    0.8340    0.8427       893
weighted avg     0.8570    0.8488    0.8463       893


Epoch: 3/20 - LR: 0.000100
514.8s - model1_loss: 0.4893 - model1_acc: 85.1738 - model1_kl_loss: 0.0723- model2_kl_loss: 0.0738: 100%|██████████| 3568/3568 [08:35<00:00,  6.92it/s]
model1_Confusion Matrix:
[[182  58   4]
 [ 15 345   5]
 [ 13  32 239]]


model2_Confusion Matrix:
[[201  40   3]
 [ 25 336   4]
 [ 18  20 246]]


model_1: train loss: 0.4893 - train acc: 85.1738 - val loss: 0.4402 - val acc: 85.7783
model_2: train loss: 0.4871 - train acc: 85.4260 - val loss: 0.4293 - val acc: 87.6820 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8667    0.7459    0.8018       244
           1     0.7931    0.9452    0.8625       365
           2     0.9637    0.8415    0.8985       284

    accuracy                         0.8578       893
   macro avg     0.8745    0.8442    0.8543       893
weighted avg     0.8675    0.8578    0.8574       893

              precision    recall  f1-score   support

           0     0.8238    0.8238    0.8238       244
           1     0.8485    0.9205    0.8830       365
           2     0.9723    0.8662    0.9162       284

    accuracy                         0.8768       893
   macro avg     0.8815    0.8702    0.8743       893
weighted avg     0.8811    0.8768    0.8774       893


Epoch: 4/20 - LR: 0.000100
578.9s - model1_loss: 0.4336 - model1_acc: 87.3599 - model1_kl_loss: 0.0779- model2_kl_loss: 0.0782: 100%|██████████| 3568/3568 [09:40<00:00,  6.15it/s]
model1_Confusion Matrix:
[[215  19  10]
 [ 43 301  21]
 [ 13   9 262]]


model2_Confusion Matrix:
[[221   9  14]
 [ 45 297  23]
 [  9   8 267]]


model_1: train loss: 0.4336 - train acc: 87.3599 - val loss: 0.3827 - val acc: 87.1221 [*]
model_2: train loss: 0.4404 - train acc: 87.6121 - val loss: 0.3899 - val acc: 87.9059 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.7934    0.8811    0.8350       244
           1     0.9149    0.8247    0.8674       365
           2     0.8942    0.9225    0.9081       284

    accuracy                         0.8712       893
   macro avg     0.8675    0.8761    0.8702       893
weighted avg     0.8751    0.8712    0.8715       893

              precision    recall  f1-score   support

           0     0.8036    0.9057    0.8516       244
           1     0.9459    0.8137    0.8748       365
           2     0.8783    0.9401    0.9082       284

    accuracy                         0.8791       893
   macro avg     0.8759    0.8865    0.8782       893
weighted avg     0.8855    0.8791    0.8791       893


Epoch: 5/20 - LR: 0.000100
587.3s - model1_loss: 0.3996 - model1_acc: 89.0695 - model1_kl_loss: 0.0829- model2_kl_loss: 0.0831: 100%|██████████| 3568/3568 [09:48<00:00,  6.06it/s]
model1_Confusion Matrix:
[[203  32   9]
 [ 25 325  15]
 [ 11  15 258]]


model2_Confusion Matrix:
[[220  20   4]
 [ 50 300  15]
 [ 21  12 251]]


model_1: train loss: 0.3996 - train acc: 89.0695 - val loss: 0.3931 - val acc: 88.0179 [*]
model_2: train loss: 0.4141 - train acc: 88.7332 - val loss: 0.4178 - val acc: 86.3382
基测试集:
              precision    recall  f1-score   support

           0     0.8494    0.8320    0.8406       244
           1     0.8737    0.8904    0.8820       365
           2     0.9149    0.9085    0.9117       284

    accuracy                         0.8802       893
   macro avg     0.8793    0.8769    0.8781       893
weighted avg     0.8801    0.8802    0.8801       893

              precision    recall  f1-score   support

           0     0.7560    0.9016    0.8224       244
           1     0.9036    0.8219    0.8608       365
           2     0.9296    0.8838    0.9061       284

    accuracy                         0.8634       893
   macro avg     0.8631    0.8691    0.8631       893
weighted avg     0.8716    0.8634    0.8647       893


Epoch: 6/20 - LR: 0.000100
550.5s - model1_loss: 0.3811 - model1_acc: 89.9664 - model1_kl_loss: 0.0851- model2_kl_loss: 0.0860: 100%|██████████| 3568/3568 [09:11<00:00,  6.47it/s]
model1_Confusion Matrix:
[[203  33   8]
 [ 22 335   8]
 [  9   8 267]]


model2_Confusion Matrix:
[[214  19  11]
 [ 27 323  15]
 [ 13  11 260]]


model_1: train loss: 0.3811 - train acc: 89.9664 - val loss: 0.3894 - val acc: 90.1456 [*]
model_2: train loss: 0.3745 - train acc: 90.1906 - val loss: 0.4049 - val acc: 89.2497 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8675    0.8320    0.8494       244
           1     0.8910    0.9178    0.9042       365
           2     0.9435    0.9401    0.9418       284

    accuracy                         0.9015       893
   macro avg     0.9006    0.8966    0.8985       893
weighted avg     0.9013    0.9015    0.9012       893

              precision    recall  f1-score   support

           0     0.8425    0.8770    0.8594       244
           1     0.9150    0.8849    0.8997       365
           2     0.9091    0.9155    0.9123       284

    accuracy                         0.8925       893
   macro avg     0.8889    0.8925    0.8905       893
weighted avg     0.8933    0.8925    0.8927       893


Epoch: 7/20 - LR: 0.000100
567.4s - model1_loss: 0.3434 - model1_acc: 91.3957 - model1_kl_loss: 0.0898- model2_kl_loss: 0.0889: 100%|██████████| 3568/3568 [09:28<00:00,  6.27it/s]
model1_Confusion Matrix:
[[175  28  41]
 [ 15 320  30]
 [  8   6 270]]


model2_Confusion Matrix:
[[202  31  11]
 [ 30 317  18]
 [ 11   3 270]]


model_1: train loss: 0.3434 - train acc: 91.3957 - val loss: 0.4724 - val acc: 85.6663
model_2: train loss: 0.3551 - train acc: 90.5830 - val loss: 0.4564 - val acc: 88.3539
基测试集:
              precision    recall  f1-score   support

           0     0.8838    0.7172    0.7919       244
           1     0.9040    0.8767    0.8901       365
           2     0.7918    0.9507    0.8640       284

    accuracy                         0.8567       893
   macro avg     0.8599    0.8482    0.8487       893
weighted avg     0.8628    0.8567    0.8550       893

              precision    recall  f1-score   support

           0     0.8313    0.8279    0.8296       244
           1     0.9031    0.8685    0.8855       365
           2     0.9030    0.9507    0.9262       284

    accuracy                         0.8835       893
   macro avg     0.8791    0.8824    0.8804       893
weighted avg     0.8835    0.8835    0.8832       893


Epoch: 8/20 - LR: 0.000100
574.6s - model1_loss: 0.3100 - model1_acc: 93.1614 - model1_kl_loss: 0.0934- model2_kl_loss: 0.0945: 100%|██████████| 3568/3568 [09:35<00:00,  6.20it/s]
model1_Confusion Matrix:
[[214  21   9]
 [ 28 326  11]
 [ 15   4 265]]


model2_Confusion Matrix:
[[209  32   3]
 [ 33 330   2]
 [ 16  13 255]]


model_1: train loss: 0.3100 - train acc: 93.1614 - val loss: 0.3695 - val acc: 90.1456
model_2: train loss: 0.3031 - train acc: 92.8531 - val loss: 0.3599 - val acc: 88.9138
基测试集:
              precision    recall  f1-score   support

           0     0.8327    0.8770    0.8543       244
           1     0.9288    0.8932    0.9106       365
           2     0.9298    0.9331    0.9315       284

    accuracy                         0.9015       893
   macro avg     0.8971    0.9011    0.8988       893
weighted avg     0.9029    0.9015    0.9019       893

              precision    recall  f1-score   support

           0     0.8101    0.8566    0.8327       244
           1     0.8800    0.9041    0.8919       365
           2     0.9808    0.8979    0.9375       284

    accuracy                         0.8891       893
   macro avg     0.8903    0.8862    0.8874       893
weighted avg     0.8929    0.8891    0.8902       893


Epoch: 9/20 - LR: 0.000100
571.9s - model1_loss: 0.3083 - model1_acc: 93.3296 - model1_kl_loss: 0.1023- model2_kl_loss: 0.1007: 100%|██████████| 3568/3568 [09:33<00:00,  6.23it/s]
model1_Confusion Matrix:
[[191  34  19]
 [  8 349   8]
 [  5  13 266]]


model2_Confusion Matrix:
[[193  38  13]
 [ 20 332  13]
 [  6   8 270]]


model_1: train loss: 0.3083 - train acc: 93.3296 - val loss: 0.3620 - val acc: 90.2576 [*]
model_2: train loss: 0.3093 - train acc: 93.0493 - val loss: 0.3615 - val acc: 89.0258
基测试集:
              precision    recall  f1-score   support

           0     0.9363    0.7828    0.8527       244
           1     0.8813    0.9562    0.9172       365
           2     0.9078    0.9366    0.9220       284

    accuracy                         0.9026       893
   macro avg     0.9085    0.8919    0.8973       893
weighted avg     0.9048    0.9026    0.9011       893

              precision    recall  f1-score   support

           0     0.8813    0.7910    0.8337       244
           1     0.8783    0.9096    0.8937       365
           2     0.9122    0.9507    0.9310       284

    accuracy                         0.8903       893
   macro avg     0.8906    0.8838    0.8861       893
weighted avg     0.8899    0.8903    0.8892       893


Epoch: 10/20 - LR: 0.000100
562.0s - model1_loss: 0.3050 - model1_acc: 94.1704 - model1_kl_loss: 0.1027- model2_kl_loss: 0.1017: 100%|██████████| 3568/3568 [09:23<00:00,  6.33it/s]
model1_Confusion Matrix:
[[215  20   9]
 [ 42 315   8]
 [ 20  12 252]]


model2_Confusion Matrix:
[[206  31   7]
 [ 32 326   7]
 [ 15  18 251]]


model_1: train loss: 0.3050 - train acc: 94.1704 - val loss: 0.4595 - val acc: 87.5700
model_2: train loss: 0.3134 - train acc: 93.4137 - val loss: 0.4468 - val acc: 87.6820
基测试集:
              precision    recall  f1-score   support

           0     0.7762    0.8811    0.8253       244
           1     0.9078    0.8630    0.8848       365
           2     0.9368    0.8873    0.9114       284

    accuracy                         0.8757       893
   macro avg     0.8736    0.8772    0.8739       893
weighted avg     0.8811    0.8757    0.8770       893

              precision    recall  f1-score   support

           0     0.8142    0.8443    0.8290       244
           1     0.8693    0.8932    0.8811       365
           2     0.9472    0.8838    0.9144       284

    accuracy                         0.8768       893
   macro avg     0.8769    0.8737    0.8748       893
weighted avg     0.8790    0.8768    0.8774       893


Epoch: 11/20 - LR: 0.000100
557.4s - model1_loss: 0.2907 - model1_acc: 94.3386 - model1_kl_loss: 0.0996- model2_kl_loss: 0.0999: 100%|██████████| 3568/3568 [09:18<00:00,  6.39it/s]
model1_Confusion Matrix:
[[205  31   8]
 [ 23 334   8]
 [ 11  12 261]]


model2_Confusion Matrix:
[[204  33   7]
 [ 23 336   6]
 [ 13  12 259]]


model_1: train loss: 0.2907 - train acc: 94.3386 - val loss: 0.3780 - val acc: 89.5857
model_2: train loss: 0.2873 - train acc: 94.5628 - val loss: 0.3662 - val acc: 89.4737 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8577    0.8402    0.8489       244
           1     0.8859    0.9151    0.9003       365
           2     0.9422    0.9190    0.9305       284

    accuracy                         0.8959       893
   macro avg     0.8953    0.8914    0.8932       893
weighted avg     0.8961    0.8959    0.8958       893

              precision    recall  f1-score   support

           0     0.8500    0.8361    0.8430       244
           1     0.8819    0.9205    0.9008       365
           2     0.9522    0.9120    0.9317       284

    accuracy                         0.8947       893
   macro avg     0.8947    0.8895    0.8918       893
weighted avg     0.8955    0.8947    0.8948       893


Epoch: 12/20 - LR: 0.000100
519.6s - model1_loss: 0.2506 - model1_acc: 95.5717 - model1_kl_loss: 0.0919- model2_kl_loss: 0.0971: 100%|██████████| 3568/3568 [08:40<00:00,  6.86it/s]
model1_Confusion Matrix:
[[206  30   8]
 [ 22 324  19]
 [ 14  12 258]]


model2_Confusion Matrix:
[[212  23   9]
 [ 38 316  11]
 [ 12  12 260]]


model_1: train loss: 0.2506 - train acc: 95.5717 - val loss: 0.5147 - val acc: 88.2419
model_2: train loss: 0.2463 - train acc: 95.5998 - val loss: 0.4981 - val acc: 88.2419
基测试集:
              precision    recall  f1-score   support

           0     0.8512    0.8443    0.8477       244
           1     0.8852    0.8877    0.8865       365
           2     0.9053    0.9085    0.9069       284

    accuracy                         0.8824       893
   macro avg     0.8806    0.8801    0.8803       893
weighted avg     0.8823    0.8824    0.8824       893

              precision    recall  f1-score   support

           0     0.8092    0.8689    0.8379       244
           1     0.9003    0.8658    0.8827       365
           2     0.9286    0.9155    0.9220       284

    accuracy                         0.8824       893
   macro avg     0.8793    0.8834    0.8809       893
weighted avg     0.8844    0.8824    0.8830       893


Epoch: 13/20 - LR: 0.000100
536.4s - model1_loss: 0.2528 - model1_acc: 95.8520 - model1_kl_loss: 0.1018- model2_kl_loss: 0.1011: 100%|██████████| 3568/3568 [08:57<00:00,  6.63it/s]
model1_Confusion Matrix:
[[204  35   5]
 [ 17 343   5]
 [  8  19 257]]


model2_Confusion Matrix:
[[207  34   3]
 [ 17 343   5]
 [ 11  16 257]]


model_1: train loss: 0.2528 - train acc: 95.8520 - val loss: 0.3535 - val acc: 90.0336
model_2: train loss: 0.2570 - train acc: 95.9922 - val loss: 0.3694 - val acc: 90.3695 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8908    0.8361    0.8626       244
           1     0.8640    0.9397    0.9003       365
           2     0.9625    0.9049    0.9328       284

    accuracy                         0.9003       893
   macro avg     0.9058    0.8936    0.8986       893
weighted avg     0.9027    0.9003    0.9003       893

              precision    recall  f1-score   support

           0     0.8809    0.8484    0.8643       244
           1     0.8728    0.9397    0.9050       365
           2     0.9698    0.9049    0.9362       284

    accuracy                         0.9037       893
   macro avg     0.9078    0.8977    0.9019       893
weighted avg     0.9058    0.9037    0.9038       893


Epoch: 14/20 - LR: 0.000100
568.8s - model1_loss: 0.2163 - model1_acc: 96.6648 - model1_kl_loss: 0.0959- model2_kl_loss: 0.0947: 100%|██████████| 3568/3568 [09:29<00:00,  6.26it/s]
model1_Confusion Matrix:
[[210  22  12]
 [ 33 321  11]
 [ 14   5 265]]


model2_Confusion Matrix:
[[211  25   8]
 [ 16 339  10]
 [  9   8 267]]


model_1: train loss: 0.2163 - train acc: 96.6648 - val loss: 0.4568 - val acc: 89.1377
model_2: train loss: 0.2241 - train acc: 96.3565 - val loss: 0.4225 - val acc: 91.4894 [*]
基测试集:
              precision    recall  f1-score   support

           0     0.8171    0.8607    0.8383       244
           1     0.9224    0.8795    0.9004       365
           2     0.9201    0.9331    0.9266       284

    accuracy                         0.8914       893
   macro avg     0.8866    0.8911    0.8884       893
weighted avg     0.8929    0.8914    0.8918       893

              precision    recall  f1-score   support

           0     0.8941    0.8648    0.8792       244
           1     0.9113    0.9288    0.9199       365
           2     0.9368    0.9401    0.9385       284

    accuracy                         0.9149       893
   macro avg     0.9141    0.9112    0.9125       893
weighted avg     0.9147    0.9149    0.9147       893


Epoch: 15/20 - LR: 0.000100
534.6s - model1_loss: 0.2327 - model1_acc: 96.6087 - model1_kl_loss: 0.0972- model2_kl_loss: 0.0952: 100%|██████████| 3568/3568 [08:55<00:00,  6.67it/s]
model1_Confusion Matrix:
[[204  31   9]
 [ 24 331  10]
 [ 13   5 266]]


model2_Confusion Matrix:
[[216  26   2]
 [ 29 334   2]
 [ 17  17 250]]


model_1: train loss: 0.2327 - train acc: 96.6087 - val loss: 0.4278 - val acc: 89.6976
model_2: train loss: 0.2377 - train acc: 96.2444 - val loss: 0.4191 - val acc: 89.5857
基测试集:
              precision    recall  f1-score   support

           0     0.8465    0.8361    0.8412       244
           1     0.9019    0.9068    0.9044       365
           2     0.9333    0.9366    0.9350       284

    accuracy                         0.8970       893
   macro avg     0.8939    0.8932    0.8935       893
weighted avg     0.8968    0.8970    0.8969       893

              precision    recall  f1-score   support

           0     0.8244    0.8852    0.8538       244
           1     0.8859    0.9151    0.9003       365
           2     0.9843    0.8803    0.9294       284

    accuracy                         0.8959       893
   macro avg     0.8982    0.8935    0.8945       893
weighted avg     0.9004    0.8959    0.8968       893


Epoch: 16/20 - LR: 0.000100
519.9s - model1_loss: 0.2184 - model1_acc: 96.9170 - model1_kl_loss: 0.0986- model2_kl_loss: 0.1000: 100%|██████████| 3568/3568 [08:40<00:00,  6.85it/s]
model1_Confusion Matrix:
[[211  28   5]
 [ 28 328   9]
 [ 15   9 260]]


model2_Confusion Matrix:
[[170  41  33]
 [ 15 328  22]
 [  3   4 277]]


model_1: train loss: 0.2184 - train acc: 96.9170 - val loss: 0.5595 - val acc: 89.4737
model_2: train loss: 0.2211 - train acc: 96.8330 - val loss: 0.6532 - val acc: 86.7861
基测试集:
              precision    recall  f1-score   support

           0     0.8307    0.8648    0.8474       244
           1     0.8986    0.8986    0.8986       365
           2     0.9489    0.9155    0.9319       284

    accuracy                         0.8947       893
   macro avg     0.8927    0.8930    0.8926       893
weighted avg     0.8961    0.8947    0.8952       893

              precision    recall  f1-score   support

           0     0.9043    0.6967    0.7870       244
           1     0.8794    0.8986    0.8889       365
           2     0.8343    0.9754    0.8994       284

    accuracy                         0.8679       893
   macro avg     0.8726    0.8569    0.8584       893
weighted avg     0.8718    0.8679    0.8644       893


Epoch: 17/20 - LR: 0.000100
518.8s - model1_loss: 0.2011 - model1_acc: 97.2253 - model1_kl_loss: 0.0856- model2_kl_loss: 0.0913: 100%|██████████| 3568/3568 [08:39<00:00,  6.87it/s]
model1_Confusion Matrix:
[[216  23   5]
 [ 34 325   6]
 [ 16  11 257]]


model2_Confusion Matrix:
[[205  34   5]
 [ 19 343   3]
 [ 10  13 261]]


model_1: train loss: 0.2011 - train acc: 97.2253 - val loss: 0.4101 - val acc: 89.3617
model_2: train loss: 0.1969 - train acc: 97.7018 - val loss: 0.3876 - val acc: 90.5935
基测试集:
              precision    recall  f1-score   support

           0     0.8120    0.8852    0.8471       244
           1     0.9053    0.8904    0.8978       365
           2     0.9590    0.9049    0.9312       284

    accuracy                         0.8936       893
   macro avg     0.8921    0.8935    0.8920       893
weighted avg     0.8969    0.8936    0.8945       893

              precision    recall  f1-score   support

           0     0.8761    0.8402    0.8577       244
           1     0.8795    0.9397    0.9086       365
           2     0.9703    0.9190    0.9439       284

    accuracy                         0.9059       893
   macro avg     0.9086    0.8996    0.9034       893
weighted avg     0.9074    0.9059    0.9059       893


Epoch: 18/20 - LR: 0.000100
547.5s - model1_loss: 0.1872 - model1_acc: 97.4496 - model1_kl_loss: 0.0901- model2_kl_loss: 0.0870: 100%|██████████| 3568/3568 [09:08<00:00,  6.50it/s]
model1_Confusion Matrix:
[[203  29  12]
 [ 23 332  10]
 [  7   6 271]]


model2_Confusion Matrix:
[[224  15   5]
 [ 40 320   5]
 [ 19  14 251]]


model_1: train loss: 0.1872 - train acc: 97.4496 - val loss: 0.4186 - val acc: 90.2576
model_2: train loss: 0.1918 - train acc: 97.3374 - val loss: 0.4685 - val acc: 89.0258
基测试集:
              precision    recall  f1-score   support

           0     0.8712    0.8320    0.8512       244
           1     0.9046    0.9096    0.9071       365
           2     0.9249    0.9542    0.9393       284

    accuracy                         0.9026       893
   macro avg     0.9003    0.8986    0.8992       893
weighted avg     0.9020    0.9026    0.9021       893

              precision    recall  f1-score   support

           0     0.7915    0.9180    0.8501       244
           1     0.9169    0.8767    0.8964       365
           2     0.9617    0.8838    0.9211       284

    accuracy                         0.8903       893
   macro avg     0.8900    0.8928    0.8892       893
weighted avg     0.8969    0.8903    0.8916       893


Epoch: 19/20 - LR: 0.000100
529.6s - model1_loss: 0.1888 - model1_acc: 97.7018 - model1_kl_loss: 0.0917- model2_kl_loss: 0.0938: 100%|██████████| 3568/3568 [08:50<00:00,  6.72it/s]
model1_Confusion Matrix:
[[215  22   7]
 [ 36 314  15]
 [ 20   6 258]]


model2_Confusion Matrix:
[[208  23  13]
 [ 38 313  14]
 [ 14   6 264]]


model_1: train loss: 0.1888 - train acc: 97.7018 - val loss: 0.4997 - val acc: 88.1299
model_2: train loss: 0.1857 - train acc: 97.8700 - val loss: 0.5096 - val acc: 87.9059
基测试集:
              precision    recall  f1-score   support

           0     0.7934    0.8811    0.8350       244
           1     0.9181    0.8603    0.8883       365
           2     0.9214    0.9085    0.9149       284

    accuracy                         0.8813       893
   macro avg     0.8776    0.8833    0.8794       893
weighted avg     0.8851    0.8813    0.8822       893

              precision    recall  f1-score   support

           0     0.8000    0.8525    0.8254       244
           1     0.9152    0.8575    0.8854       365
           2     0.9072    0.9296    0.9183       284

    accuracy                         0.8791       893
   macro avg     0.8741    0.8799    0.8764       893
weighted avg     0.8812    0.8791    0.8795       893


Epoch: 20/20 - LR: 0.000100
512.2s - model1_loss: 0.1974 - model1_acc: 98.1502 - model1_kl_loss: 0.0993- model2_kl_loss: 0.0962: 100%|██████████| 3568/3568 [08:32<00:00,  6.96it/s]
model1_Confusion Matrix:
[[215  26   3]
 [ 22 337   6]
 [ 19   7 258]]


model2_Confusion Matrix:
[[212  26   6]
 [ 34 327   4]
 [ 16  14 254]]


model_1: train loss: 0.1974 - train acc: 98.1502 - val loss: 0.3829 - val acc: 90.7055 [*]
model_2: train loss: 0.2015 - train acc: 97.3094 - val loss: 0.4107 - val acc: 88.8018
基测试集:
              precision    recall  f1-score   support

           0     0.8398    0.8811    0.8600       244
           1     0.9108    0.9233    0.9170       365
           2     0.9663    0.9085    0.9365       284

    accuracy                         0.9071       893
   macro avg     0.9056    0.9043    0.9045       893
weighted avg     0.9091    0.9071    0.9076       893

              precision    recall  f1-score   support

           0     0.8092    0.8689    0.8379       244
           1     0.8910    0.8959    0.8934       365
           2     0.9621    0.8944    0.9270       284

    accuracy                         0.8880       893
   macro avg     0.8874    0.8864    0.8861       893
weighted avg     0.8913    0.8880    0.8890       893

model1_Confusion Matrix:
[[389  59  14]
 [ 45 553   8]
 [ 26  15 378]]


model2_Confusion Matrix:
[[397  46  19]
 [ 48 551   7]
 [ 16  19 384]]


元测试集:
              precision    recall  f1-score   support

           0     0.8457    0.8420    0.8438       462
           1     0.8820    0.9125    0.8970       606
           2     0.9450    0.9021    0.9231       419

    accuracy                         0.8877      1487
   macro avg     0.8909    0.8856    0.8880      1487
weighted avg     0.8884    0.8877    0.8878      1487

              precision    recall  f1-score   support

           0     0.8612    0.8593    0.8602       462
           1     0.8945    0.9092    0.9018       606
           2     0.9366    0.9165    0.9264       419

    accuracy                         0.8958      1487
   macro avg     0.8974    0.8950    0.8962      1487
weighted avg     0.8960    0.8958    0.8958      1487

元测试集5次求平均：
893
893
1487
1487
Grid Search Progress:  33%|███▎      | 1/3 [00:09<00:18,  9.39s/it]Parameters: C, Best Score: 0.918259996233758, Best Params: {'C': 1, 'gamma': 0.01, 'kernel': 'linear'}
Grid Search Progress:  67%|██████▋   | 2/3 [00:18<00:08,  8.94s/it]Parameters: kernel, Best Score: 0.918259996233758, Best Params: {'C': 1, 'gamma': 0.01, 'kernel': 'linear'}
Parameters: gamma, Best Score: 0.918259996233758, Best Params: {'C': 1, 'gamma': 0.01, 'kernel': 'linear'}
Grid Search Progress: 100%|██████████| 3/3 [00:26<00:00,  8.83s/it]
Confusion Matrix:
[[384  58  20]
 [ 40 559   7]
 [ 20  11 388]]
Classification Report:
              precision    recall  f1-score   support

           0     0.8649    0.8312    0.8477       462
           1     0.8901    0.9224    0.9060       606
           2     0.9349    0.9260    0.9305       419

    accuracy                         0.8951      1487
   macro avg     0.8966    0.8932    0.8947      1487
weighted avg     0.8949    0.8951    0.8948      1487


Process finished with exit code 0
